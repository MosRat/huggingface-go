name: Build and Release Go Project

on:
  push:
    tags:
      - 'v*.*.*'  # 只有推送符合 v*.*.* 格式的标签时才会触发工作流

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22  # 指定需要的 Go 版本
        
        

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            **/go.sum
            **/go.mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy
        working-directory: src/huggingface-go

      - name: Build
        run: |
          go build -o huggingface-go  # 将 `huggingface-go` 替换为你的应用名称
          ls
        working-directory: src/huggingface-go

      # - name: Archive the build
      #   if: success()
      #   run: zip -r huggingface-go-${{ matrix.os }}.zip huggingface-go
      #   working-directory: src
        
      - name: Archive the build (Linux and macOS)
        if: runner.os != 'Windows'
        run: zip -r huggingface-go-${{ matrix.os }}.zip huggingface-go && ls
        working-directory: src

      - name: Archive the build (Windows)
        if: runner.os == 'Windows'
        run: powershell Compress-Archive -Path huggingface-go -DestinationPath huggingface-go-${{ matrix.os }}.zip 
        working-directory: src

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: huggingface-go-${{ matrix.os }}
          path: huggingface-go-${{ matrix.os }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/huggingface-go-ubuntu-latest.zip
          asset_name: huggingface-go-ubuntu-latest.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/huggingface-go-macos-latest.zip
          asset_name: huggingface-go-macos-latest.zip
          asset_content_type: application/zip

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/huggingface-go-windows-latest.zip
          asset_name: huggingface-go-windows-latest.zip
          asset_content_type: application/zip
